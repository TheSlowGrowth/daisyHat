#!/bin/bash

# Requires the following env variables to be set:
# DAISYHAT_DOCKER_IMAGE - name of the daisyhat docker image
# DAISYHAT_CONTAINER_NAME - desired name of the docker container
# DAISYHAT_RUNNER_NAME - desired name of the github actions runner
# DAISYHAT_DEVICE_MAJOR - major device number of devices to passthrough to the container
# DAISYHAT_REPO - the repo name to connect to
# DAISYHAT_USER - the github username
# DAISYHAT_GH_TOKEN - the github access token that allows to add/remove runners

# when auto-restart is enabled, restart the container forever
while [ "$1" != "no-restart" ];
do

    # get IDs of all running containers
    echo "Checking for running containers"
    CONTAINERS_TO_STOP=$(docker ps -aq --filter ancestor=${DAISYHAT_DOCKER_IMAGE})

    if [ ! -z "$CONTAINERS_TO_STOP" ]
    then
        echo "Stopping running containers"
        # stop all running containers - send SIGINT to let them shutdown (doesn't work apparently?)
        docker kill --signal=SIGINT ${CONTAINERS_TO_STOP}
        # stop all running containers - forcefully quit whatever is still running 
        docker stop --time=30 ${CONTAINERS_TO_STOP}
        # remove the containers that were shutdown
        docker rm ${CONTAINERS_TO_STOP}
    fi

    # create a new container, specifying the USB devices that the container is allowed to access
    # - device-cgroup-rule grants access to devices with the corresponding major group number
    #   - device group ${DAISYHAT_DEVICE_MAJOR} is for the programming device
    #   - device group 166 is for ttyACM devices (e.g. Daisy Seed USB UART)
    #   - the daisyHatTtyAttach.sh and daisyHatUsbAttach.py scripts will be executed via udev rules
    #     to create /dev/*** mappings for devices that are re-plugged while the container is running
    # - the groups dialout and plugdev are required to use the USB devices
    # - mapping the /dev/serial/by-id/ folder allows to use the symlinks generated by the host system
    #   when accessing serial devices like ttyACM1 which may change when the device is re-plugged
    echo "Starting new container"
    docker run -d \
                --group-add=dialout --group-add=plugdev \
                --device=/dev/bus/usb \
                --device-cgroup-rule="a "${DAISYHAT_DEVICE_MAJOR}":* rmw" \
                --device-cgroup-rule="a 166:* rmw" \
                -v /dev/serial/by-id/:/dev/serial/by-id/ \
                --name ${DAISYHAT_CONTAINER_NAME} ${DAISYHAT_DOCKER_IMAGE} ${DAISYHAT_USER} ${DAISYHAT_REPO} ${DAISYHAT_GH_TOKEN} ${DAISYHAT_RUNNER_NAME}

    # reattach all existing USB devices to the container
    echo "Attaching USB devices"
    # reattach raw USB devices
    python3 /home/$USER/daisyHat/daisyHatUsbAttach.py
    # reattach tty serial devices
    for DEVICE in /dev/ttyACM*; do
        MAJOR=$(ls -l $DEVICE | sed "s/^.*root [a-z]* \([0-9]*\), .*$/\1/")
        MINOR=$(ls -l $DEVICE | sed "s/^.*root [a-z]* [0-9]*, \([0-9]*\) .*$/\1/")
        if [ "$MAJOR" = "166" ]
        then
            /home/$USER/daisyHat/daisyHatTtyAttach.sh added $DEVICE $MAJOR $MINOR
        fi
    done

    # auto restart enabled ?
    if [ "$1" != "no-restart" ]; then 
        echo "Waiting for container to exit"
        docker container wait ${DAISYHAT_CONTAINER_NAME}
    fi

done # end of while loop
